ALTER SESSION SET CURRENT_SCHEMA=PANDA;

CREATE OR REPLACE PROCEDURE add_flashcard
(
    p_front NVARCHAR2,
    p_back NVARCHAR2,
    p_cid INT
)
IS
    v_card_id CARD.id%TYPE;
BEGIN
    BEGIN
        INSERT INTO CARD (memory, n_learn, n_missed, learn_next_time_at)
        VALUES
        (0, 0, 0, null) RETURNING id INTO v_card_id;
        INSERT INTO FLASHCARD (cid, front, back) VALUES 
        (
            v_card_id,
            p_front,
            p_back
        );
        INSERT INTO collection_card (collect_id, card_id) VALUES (p_cid, v_card_id);
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            RAISE;
            ROLLBACK;
    END;
END;
/
GRANT EXECUTE ON ADD_FLASHCARD TO PANDA_USER_ROLE;
--EXECUTE add_flashcard('test', 'test', 2);

CREATE OR REPLACE FUNCTION select_cards
(
    p_cid INT
) RETURN SYS_REFCURSOR
IS
    list_cards SYS_REFCURSOR;
BEGIN
    OPEN list_cards FOR
--    SELECT VOCAB_TYPEVOCAB.WORD AS FRONT, VOCAB_TYPEVOCAB.MEANING AS BACK, 'VOCAB' AS TYPE_CARD, VOCAB_TYPEVOCAB.POS FROM COLLECTION_CARD
--    LEFT JOIN CARD
--    ON CARD.ID = COLLECTION_CARD.CARD_ID
--    LEFT JOIN VOCAB_TYPEVOCAB
--    ON VOCAB_TYPEVOCAB.CID = CARD.ID
--    LEFT JOIN COLLECTION
--    ON COLLECTION.ID = COLLECTION_CARD.COLLECT_ID
--    WHERE COLLECTION_CARD.COLLECT_ID = p_cid  AND VOCAB_TYPEVOCAB.WORD IS NOT NULL AND COLLECTION.USERNAME = user
--    UNION
--    SELECT FLASHCARD.FRONT AS FRONT, FLASHCARD.BACK AS BACK, 'FLASHCARD' AS TYPE_CARD, NULL FROM COLLECTION_CARD
--    LEFT JOIN CARD
--    ON CARD.ID = COLLECTION_CARD.CARD_ID
--    LEFT JOIN FLASHCARD
--    ON FLASHCARD.CID = CARD.ID
--    LEFT JOIN COLLECTION
--    ON COLLECTION.ID = COLLECTION_CARD.COLLECT_ID
--    WHERE COLLECTION_CARD.COLLECT_ID = p_cid AND FLASHCARD.FRONT IS NOT NULL AND COLLECTION.USERNAME = user
--    ORDER BY TYPE_CARD
--    ;
    SELECT CARD.ID AS CARD_ID, COLLECTION.ID AS COLLECTION_ID, FLASHCARD.FRONT, FLASHCARD.BACK, V.WORD, V.MEANING, V.POS FROM COLLECTION
    LEFT JOIN COLLECTION_CARD
    ON COLLECTION_CARD.COLLECT_ID = COLLECTION.ID
    LEFT JOIN CARD
    ON CARD.ID = COLLECTION_CARD.CARD_ID
    LEFT JOIN FLASHCARD
    ON FLASHCARD.CID = CARD.ID
    LEFT JOIN VOCAB_TYPEVOCAB V
    ON V.CID = CARD.ID
    WHERE COLLECTION.USERNAME = user AND COLLECTION.ID = p_cid;
    RETURN list_cards;
END;
/
GRANT EXECUTE ON SELECT_CARDS TO PANDA_USER_ROLE;
